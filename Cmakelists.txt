# Versão mínima do CMake e configurações iniciais do projeto
cmake_minimum_required(VERSION 3.16)

# Verifica se estamos compilando com a toolchain do ESP-IDF
if(DEFINED IDF_TARGET)
    # --- MODO DE COMPILAÇÃO PARA O ESP32 ---
    # Inclui o script padrão do ESP-IDF que faz toda a mágica
    include($ENV{IDF_PATH}/tools/cmake/project.cmake)
    project(CaptiveWiFi_ESP32)
else()
    # --- MODO DE COMPILAÇÃO PARA O HOST (MAC/LINUX) ---
    project(CaptiveWiFi_Host VERSION 1.0 LANGUAGES CXX)

    set(CMAKE_CXX_STANDARD 17)
    set(CMAKE_CXX_STANDARD_REQUIRED ON)

    # Adiciona um executável para rodar no host
    add_executable(run_host_tests
        tests/host_main.cpp
        tests/mocks/InMemoryUserRepository.cpp
        # Inclui os fontes da camada de domínio, que são agnósticos
        components/domain/User.cpp
        components/domain/OAuthUserService.cpp
    )

    # Configura os diretórios de include para o host
    target_include_directories(run_host_tests PUBLIC
        "components/domain/include"
        "tests/mocks"
    )

    message(STATUS "Projeto configurado para compilação no HOST. Use 'make' para construir.")
endif()